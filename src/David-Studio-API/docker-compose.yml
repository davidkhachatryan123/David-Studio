version: '3.4'

services:
  # web-api-gw:
  #   image: web.ocelot.apigw:${TAG:-latest}
  #   build:
  #     context: .
  #     dockerfile: ApiGateways/OcelotApiGateway/Dockerfile

  crm-api-gw:
    image: crm.ocelot.apigw:${TAG:-latest}
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGateway/Dockerfile

  identity-server:
    image: identity.server:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/IdentityServer/Dockerfile

  identity-server-client:
    image: identity.server.client:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/IdentityServer/ClientApp/Dockerfile

  # users-api:
  #   image: users.api:${TAG:-latest}
  #   build:
  #     context: .
  #     dockerfile: Services/Users/Dockerfile

  portfolio-api:
    image: portfolio.api:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Portfolio/Dockerfile

  # pricing-api:
  #   image: pricing.api:${TAG:-latest}
  #   build:
  #     context: .
  #     dockerfile: Services/Pricing/Dockerfile

  search-api:
    image: search.api:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Search/Dockerfile

  storage-api:
    image: storage.api:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Storage/Dockerfile

  messenger-api:
    image: messenger.api:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Messanger/Dockerfile

  db:
    image: "mcr.microsoft.com/mssql/server:2022-latest"

  rabbitmq:
    image: rabbitmq:3-management

  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
