version: '3.4'

services:
  website:
    ports:
      - "443:443"
    volumes:
      - ./certs:/https:ro
    build:
      args:
        - host=${HOST}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail -k https://localhost/ || exit 1"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      web-api-gw:
        condition: service_healthy
    restart: always

  admin-panel:
    ports:
      - "4433:443"
    volumes:
      - ./certs:/https:ro
    build:
      args:
        - host=${HOST}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail -k https://localhost/ || exit 1"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      crm-api-gw:
        condition: service_healthy
    restart: always

  web-api-gw:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
      - AllowedOrigins=https://${HOST}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS}
    ports:
      - "8081:5000"
      - "8082:5001"
    volumes:
      - ./David-Studio-API/ApiGateways/Web.Bff:/app/configuration
      - ./certs:/https:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5000/healthz || exit"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      portfolio-api:
        condition: service_healthy
      pricing-api:
        condition: service_healthy
      search-api:
        condition: service_healthy
      messenger-api:
        condition: service_healthy
    restart: always

  crm-api-gw:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
      - AllowedOrigins=https://${HOST};https://${HOST}:4433
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS}
      - IdentityUrl=http://identity-server:5000
    ports:
      - "8083:5000"
      - "8084:5001"
    volumes:
      - ./David-Studio-API/ApiGateways/Crm.Bff:/app/configuration
      - ./certs:/https:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5000/healthz || exit"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      identity-server:
        condition: service_healthy
      users-api:
        condition: service_healthy
      portfolio-api:
        condition: service_healthy
      pricing-api:
        condition: service_healthy
      storage-api:
        condition: service_healthy
      messenger-api:
        condition: service_healthy
    restart: always

  identity-server:
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
      - AllowedOrigins=https://${HOST}:4433;https://${HOST}:44300
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS}
      - ConnectionStrings__IdentityDb=Server=db;Database=DavidStudio.Service.IdentityDb;User=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;
      - ConnectionStrings__EventBus=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      - IdentityServer_EmailConfirmation_URL=https://${HOST}:5011
      - IdentityWebSpa=https://${HOST}:44300
      - SpaClient=https://${HOST}:4433
      - IdentityServer=https://localhost:5011
      - UsersApiClient=http://localhost:5020
      - PortfolioApiClient=http://localhost:5030
      - PricingApiClient=http://localhost:5040
      - StorageApiClient=http://localhost:5070
      - MessengerApiClient=http://localhost:5080
    ports:
      - "5010:5000"
      - "5011:5001"
    volumes:
      - ./certs:/https:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5000/healthz || exit"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always

  identity-server-client:
    ports:
      - "44300:443"
    volumes:
      - ./certs:/https:ro
    build:
      args:
        - host=${HOST}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail -k https://localhost/ || exit 1"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      identity-server:
        condition: service_healthy
    restart: always

  users-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__EventBus=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      - Services__IdentityServerGrpcUri=http://identity-server:5005
      - Identity__Url=http://identity-server:5000
      - Identity__ExternalUrl=http://localhost:5010
      - IdentityServer_EmailConfirmation_URL=http://${HOST}:5020
    ports:
      - "5020:5000"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5000/healthz || exit"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      rabbitmq:
        condition: service_healthy
      identity-server:
        condition: service_healthy
    restart: always

  portfolio-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__PortfolioDb=Server=db;Database=DavidStudio.Service.Portfolio;User=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;
      - ConnectionStrings__EventBus=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      - Services__StorageUri=http://storage-api:5009
      - Identity__Url=http://identity-server:5000
      - Identity__ExternalUrl=http://localhost:5010
    ports:
      - "5030:5000"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5000/healthz || exit"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      identity-server:
        condition: service_healthy
    restart: always

  pricing-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__PricingDb=Server=db;Database=DavidStudio.Service.PricingDb;User=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;
      - Identity__Url=http://identity-server:5000
      - Identity__ExternalUrl=http://localhost:5010
    ports:
      - "5040:5000"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5000/healthz || exit"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      db:
        condition: service_healthy
      identity-server:
        condition: service_healthy
    restart: always

  search-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ElasticSearchUrl=http://elastic-search:9200
      - ConnectionStrings__EventBus=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
    ports:
      - "5050:5000"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5000/healthz || exit"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      rabbitmq:
        condition: service_healthy
      elastic-search:
        condition: service_healthy
    restart: always

  storage-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
      - AllowedOrigins=https://${HOST};https://${HOST}:4433
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS}
      - ConnectionStrings__StorageDb=Server=db;Database=DavidStudio.Service.Storage;User=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;
      - ConnectionStrings__EventBus=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      - Resources_Url=https://${HOST}:5071/Resources
      - StorageOptions__StoragePath=/storage
      - Identity__Url=http://identity-server:5000
      - Identity__ExternalUrl=http://localhost:5010
    volumes:
        - storage:/storage
        - ./certs:/https:ro
    ports:
      - "5070:5000"
      - "5071:5001"
      - "5079:5009"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5000/healthz || exit"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      identity-server:
        condition: service_healthy
    restart: always

  messenger-api:
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__MessagesDb=Server=db;Database=DavidStudio.Service.MessagesDb;User=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;
      - ConnectionStrings__EventBus=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      - Identity__Url=http://identity-server:5000
      - Identity__ExternalUrl=http://localhost:5010
    ports:
      - "5080:5000"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5000/healthz || exit"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      identity-server:
        condition: service_healthy
    restart: always

  db:
    env_file:
      - .env
    environment:
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqldata:/var/opt/mssql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${SA_PASSWORD}\" -Q \"SELECT 1\" || exit 1"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    restart: always

  rabbitmq:
    env_file:
      - .env
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - mqdata:/var/lib/rabbitmq
      - mqlogs:/var/log/rabbitmq
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "rabbitmq-diagnostics -q ping"
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    restart: always

  elastic-search:
    labels:
      co.elastic.logs/module: elasticsearch
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - node.name=es01
      - cluster.name=elastic-cluster
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.license.self_generated.type=basic
    mem_limit: 2048M
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:9200 || exit 1",
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    restart: always

  kibana:
    labels:
      co.elastic.logs/module: kibana
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - 5601:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elastic-search:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 1m
      timeout: 10s
      retries: 120
    depends_on:
      elastic-search:
        condition: service_healthy
    restart: always

volumes:
  storage:
  sqldata:
  mqdata:
  mqlogs:
  esdata01:
  kibanadata:
